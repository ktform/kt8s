package dev.ktform.kt8s.resources

import dev.ktform.kt8s.resources.IntOrString
import dev.ktform.kt8s.resources.KubernetesMicroTime
import dev.ktform.kt8s.resources.KubernetesTime
import dev.ktform.kt8s.resources.RawJsonObject
import dev.ktform.kt8s.resources.Resource
import dev.ktform.kt8s.resources.StringOrNumber
import kotlin.String
import kotlin.collections.List
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable
import kotlinx.serialization.Transient

/**
 * @param addresses addresses of this endpoint. For EndpointSlices of addressType "IPv4" or "IPv6", the values are IP addresses in canonical form. The syntax and semantics of other addressType values are not defined. This must contain at least one address but no more than 100. EndpointSlices generated by the EndpointSlice controller will always have exactly 1 address. No semantics are defined for additional addresses beyond the first, and kube-proxy does not look at them.
 * @param conditions conditions contains information about the current status of the endpoint.
 * @param deprecatedTopology deprecatedTopology contains topology information part of the v1beta1 API. This field is deprecated, and will be removed when the v1beta1 API is removed (no sooner than kubernetes v1.24).  While this field can hold values, it is not writable through the v1 API, and any attempts to write to it will be silently ignored. Topology information can be found in the zone and nodeName fields instead.
 * @param hints hints contains information associated with how an endpoint should be consumed.
 * @param hostname hostname of this endpoint. This field may be used by consumers of endpoints to distinguish endpoints from each other (e.g. in DNS names). Multiple endpoints which use the same hostname should be considered fungible (e.g. multiple A values in DNS). Must be lowercase and pass DNS Label (RFC 1123) validation.
 * @param nodeName nodeName represents the name of the Node hosting this endpoint. This can be used to determine endpoints local to a Node.
 * @param targetRef targetRef is a reference to a Kubernetes object that represents this endpoint.
 * @param zone zone is the name of the Zone this endpoint exists in.
 */
@Serializable
public data class Endpoint(
  public val addresses: List<String>,
  public val conditions: EndpointConditions,
  public val deprecatedTopology: RawJsonObject,
  public val hints: EndpointHints,
  public val hostname: String,
  public val nodeName: String,
  public val targetRef: ObjectReference,
  public val zone: String,
) : Resource {
  @SerialName("apiVersion")
  override val apiVersion: String = "io.k8s.api.discovery/v1"

  @Transient
  override val group: String = "io.k8s.api.discovery"

  @Transient
  override val version: String = "v1"

  @SerialName("kind")
  override val kind: String = "Endpoint"
}