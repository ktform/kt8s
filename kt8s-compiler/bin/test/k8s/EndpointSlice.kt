/*
 * Copyright (C) 2016-2025 Yuriy Yarosh
 * All rights reserved.
 *
 * SPDX-License-Identifier: MPL-2.0
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */
package dev.ktform.kt8s.resources

import kotlin.String
import kotlin.collections.List
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable
import kotlinx.serialization.Transient

/**
 * @param addressType addressType specifies the type of address carried by this EndpointSlice. All
 *   addresses in this slice must be the same type. This field is immutable after creation. The
 *   following address types are currently supported: * IPv4: Represents an IPv4 Address. * IPv6:
 *   Represents an IPv6 Address. * FQDN: Represents a Fully Qualified Domain Name. (Deprecated) The
 *   EndpointSlice controller only generates, and kube-proxy only processes, slices of addressType
 *   "IPv4" and "IPv6". No semantics are defined for the "FQDN" type.
 * @param endpoints endpoints is a list of unique endpoints in this slice. Each slice may include a
 *   maximum of 1000 endpoints.
 * @param metadata Standard object's metadata.
 * @param ports ports specifies the list of network ports exposed by each endpoint in this slice.
 *   Each port must have a unique name. Each slice may include a maximum of 100 ports. Services
 *   always have at least 1 port, so EndpointSlices generated by the EndpointSlice controller will
 *   likewise always have at least 1 port. EndpointSlices used for other purposes may have an empty
 *   ports list.
 */
@Serializable
public data class EndpointSlice(
    public val addressType: String,
    public val endpoints: List<Endpoint>,
    public val metadata: ObjectMeta,
    public val ports: List<EndpointPort>,
) : Resource {
    @SerialName("apiVersion") override val apiVersion: String = "discovery.k8s.io/v1"

    @Transient override val group: String = "discovery.k8s.io"

    @Transient override val version: String = "v1"

    @SerialName("kind") override val kind: String = "EndpointSlice"
}
